{"version":3,"file":"static/js/476.67901e20.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { getContacts } from 'redux/contacts/selectors';\n\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const type = e.target.name;\n    switch (type) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setPhone(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      reset();\n\n      return Notiflix.Notify.info(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <input\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_item\":\"ContactItem_contact_item__2RpSt\",\"button_del\":\"ContactItem_button_del__twGhu\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\n\nimport css from './ContactItem.module.css';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <li className={css.contact_item}>\n      <p>\n        {name} {number}\n      </p>\n      <button className={css.button_del} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_list\":\"ContactList_contacts_list__jhchV\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { getFilterValue, getContacts } from 'redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { useEffect } from 'react';\n\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterValue = useSelector(getFilterValue);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <div>\n      {contacts.length > 0 && (\n        <ul className={css.contacts_list}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            ></ContactItem>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_input\":\"Filter_filter_input__eu2zm\"};","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeValue } from 'redux/contacts/filterSlice';\nimport { getFilterValue } from 'redux/contacts/selectors';\n\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.filter_input}>\n      {/* Find contact by name */}\n      <input\n        type=\"text\"\n        value={filterValue}\n        placeholder=\"Find contact by name\"\n        onChange={e => dispatch(changeValue(e.target.value))}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { Rings } from 'react-loader-spinner';\n\nconst MyLoader = props => (\n  <Rings\n    height=\"80\"\n    width=\"80\"\n    color=\"#4fa94d\"\n    radius=\"6\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={true}\n    ariaLabel=\"rings-loading\"\n  />\n);\n\nexport default MyLoader;\n","// extracted by mini-css-extract-plugin\nexport default {\"page_wrapper\":\"Contacts_page_wrapper__qTcQj\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport MyLoader from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const { isLoading, error } = useSelector(state => state.contacts);\n  return (\n    <>\n      <div className={css.page_wrapper}>\n        <h1>contacts</h1>\n        <ContactForm />\n        {/* <h2 style={styles.subtitle}>Contacts</h2> */}\n        <Filter />\n        {isLoading && <MyLoader />}\n        {error && <h2>An error: {error}</h2>}\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","currentTarget","value","reset","className","css","onSubmit","preventDefault","form","elements","number","some","contact","toLowerCase","Notiflix","addContact","onChange","type","placeholder","pattern","title","required","ContactItem","id","onClick","deleteContact","ContactList","useEffect","fetchContacts","filterValue","visibleContacts","includes","length","map","Filter","changeValue","props","height","width","color","radius","wrapperStyle","wrapperClass","visible","ariaLabel","Contacts","isLoading","error"],"sourceRoot":""}