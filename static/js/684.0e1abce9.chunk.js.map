{"version":3,"file":"static/js/684.0e1abce9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const type = e.target.name;\n    switch (type) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setPhone(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      reset();\n\n      return Notiflix.Notify.info(`${name} is already in contacts`);\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <li>\n      <p>\n        {name} {number}\n      </p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.div`\n  background-color: blueviolet;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { getFilterValue, getContacts } from 'redux/contacts/selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport { useEffect } from 'react';\nimport { ContactListStyled } from './ContactList.styled';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterValue = useSelector(getFilterValue);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <ContactListStyled>\n      {contacts.length > 0 && (\n        <ul>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n            ></ContactItem>\n          ))}\n        </ul>\n      )}\n    </ContactListStyled>\n  );\n}\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeValue } from 'redux/contacts/filterSlice';\nimport { getFilterValue } from 'redux/contacts/selectors';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={filterValue}\n        onChange={e => dispatch(changeValue(e.target.value))}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst MyLoader = props => (\n <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/>\n);\n\nexport default MyLoader;","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport MyLoader from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  title: {\n    color: '#6a79a6',\n    // marginBottom: 20,\n    textTransform: 'uppercase',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: '#6a79a6',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n};\n\nexport default function Contacts() {\n  const { isLoading, error } = useSelector(state => state.contacts);\n  return (\n    <>\n      <div>\n        <h1 className=\"zag\" style={styles.title}>\n          Phonebook\n        </h1>\n        <ContactForm />\n        <h2 style={styles.subtitle}>Contacts</h2>\n        <Filter />\n        {isLoading && <MyLoader />}\n        {error && <h2>An error: {error}</h2>}\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilterValue","filter","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","currentTarget","value","reset","onSubmit","preventDefault","form","elements","number","some","contact","toLowerCase","Notiflix","addContact","onChange","type","pattern","title","required","ContactItem","id","onClick","deleteContact","ContactListStyled","styled","ContactList","useEffect","fetchContacts","filterValue","visibleContacts","includes","length","map","Filter","changeValue","props","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","styles","textTransform","fontSize","textAlign","subtitle","marginBottom","Contacts","isLoading","error","className","style"],"sourceRoot":""}